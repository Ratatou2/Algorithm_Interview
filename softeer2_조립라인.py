
WorkPlace_n = int(input())
if 1<= WorkPlace_n and WorkPlace_n <= 103:
    A_iTime, B_iTime, A_to_B, B_to_A = map(int, input().split())
    A_LastWorkTime, B_LastWorkTime = map(int, input().split())

    '''
    <추후 셀프 공부를 위한 문제 해결 방법>
    1. 먼저 입력 받은 WorkPlace_n 개수만큼 Ai와 Bi 라인에 작업장을 배분해준다
    2. 각 라인은 A_iTime과 B_iTime 만큼 시간이 걸린다
    3. A 작업장에서 B로 이동할 경우의 시간(A_to_B) / B 작업장에서 A로 이동할 경우의 시간(B_to_A)를 배정해준다
    4. 그리고 가장 마지막 N번째의 두 작업장의 시간을 적용해준다
    5. 이제 순차적으로 1번째 작업장부터 이동하는 모든 경로의 수를 구한다.
    6. 그 중에서 가장 효율적인 것만 골라 출력하게 하면 해결
    
    ※ 태블릿에 필기해둔 그림 참조
    ※ 주의할 점
        - 입력에 정수 제한이 있다는 점(예외 처리 필요)
        - 작업장의 갯수와 별개로 마지막의 작업장 시간은 따로 정해져 있다는 점
                - 바꿔말하면 N개의 작업장을 입력 받았다 할지라도 실질적으로 마지막 작업장의 소요시간은 따로 주어지므로, N-1로 작업장의 갯수를 생각하고 진행해야한다.
                - 한마디로 걍 N-1개로 생각하고 코드 짜고 마지막은 따로 주어진 작업 시간을 적용하라는 것
    '''


else:
    print("입력값은 0<N<104 사이의 정수여야합니다")

